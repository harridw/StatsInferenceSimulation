names(sub1[masCon])
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust, x$y)
dim(kClust[x$y])
dim(kClust[x$y])
dim(kClust[x$y])
dim(kClust, x$y)
dim(kClust, x$y)
dim(kClustx$y)
dim(kClust$x)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
bye()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cname, "|", fixed = TRUE)
strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
pm0
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summmary(x1)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates1 <- pm1$Date
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m$d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(x1)
head(dates)
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = meadian(x0sub), lwd = 2, na.rm = TRUE)
abline(h = median(x0sub), lwd = 2, na.rm = TRUE)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mn0)
d0 <- data.frame(names(mn0), mean = mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[, 3]))
segments(rep(1999, 52), mrg[, 2], rep(2012, 52), mrg[,3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y,]
bye
library(swirl)
swirl()
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
.915
1-(2+1)/36
deck
52
4/52
0
12/52
2/51
1/2 * 1.6 *.8
64%
.64
mypdf
integrate(mypdf, lower = 0, upper = 1.6)
.5
2
1
1-.5
info()
skip()
98.5% x 0.1%% / (98.5% x 0.1% + 1.5% x 99.9%)
.985*.001/(.985*.001+.015*.999)
info()
skip()
0.015*.999
0.000997/(0.000997+.014985)
swirl()
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
(edh+edl)/2
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, mean)
apply(allsam, FUN = mean())
apply(allsam, FUN = mean(x))
apply(allsam, 1, mean)
mean(apply(allsam, 1, mean))
mean(smeans)
swirl()
dice_mgr
dice_sqr
ex2_fair <- sum(dice_sqr * PDF)
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr*dice_high)- edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean)).
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
library(swirl)
swirl()
.2048
0.94208
pbinom(2,5,0.8, lower.tail = FALSE)
qnorm(.1)
0
qnorm(.975, mean = 3, sd = 2)
3+1.96*2
pnorm(1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm(3.6, mean = 1020, sd = 50)
pnorm((1200-1050)/50, mean = 1020, sd = 50)
pnorm((1200-1050)/50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
pnorm(0.75, mean = 1020, sd = 50, lower.tail = FALSE)
qnorm(0.75, mean = 1020, sd = 50, lower.tail = FALSE)
qnorm(0.75, mean = 1020, sd = 50)
.53
.53
ppois(3, mean = 2.5*4, lower.tail = TRUE, log.p = FALSE)
ppois(3, (2.5*4), lower.tail = TRUE, log.p = FALSE)
ppois(3, (2.5*4)
)
ppois(3, (2.5*4))
ppois(3,2.5 * 4)
pbinom(.01,1000, 5/1000)
pbinom(5,1000,.01)
ppois(5, 1000*.01)
coinPlot(10)
coinPlot(1000)
coinPlot(10000)
qnorm(.90, mean = 0, sd = 1)
qnorm(.95)
p'+c(-1,1) qnorm(.975)*sqrt(p'(1-p')/100)
qnorm(.975)*sqrt(p'(1-p')/100)
qnorm(.975)*sqrt(p'(1-p')/100)
qnorm(.975)*sqrt(c(-1,1)(1-c(-1,1))/100)
qnorm(.975)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binomial.test(60, 100)
binom.test(60, 100)
binom.test(60, 100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
◊	6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb*(1-lamb)/100)
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf.construct
poisson.test(5,94.32)$conf
?ppois
rpois(10, 5*3)
ppois(1,5*3, lower.tail = FALSE)
ppois(10,5*3, lower.tail = FALSE)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplt2(20)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
sd(difference)
s <- sd(difference)
1.58+c(-1,1)*qt(.975, 9) * s/(9)^.5
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(g2, g1, paired = TRUE)
t.test(difference)
t.test(difference)$conf
t.test(difference)$conf.int
sp <- sqrt((7 * 15.34^2 + 20 * 18.23^2) / (8 + 21 -2))
sp <- 7 * 15.34^2 + 20 * 18.23^2
27
8+21-2
ns <- 8+21-2
sp <- (sp / ns)^.5
sp <- sqrt(sp / ns)
132.86 – 127.44 + c(-1, 1) * qt(.975, 27) * sp *sqrt(1/8 + 1/21)
132.86 – 127.44 + c(-1, 1) * qt(.975, 27) * sp *sqrt(1/8 + 1/21)
132.86
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
var(g1+g2, 10+10-2)
var(g1)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
3
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
3
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
Pretty cool that it matches, right? Note that 0 is again in this 95%
| interval so you can't reject the claim that the two groups are the same.
| (Recall that this is the opposite of what we saw with paired data.) Let's
| run t.test again, this time with paired=TRUE and see how different the
| result is. Don't specify var.equal and look only at the confidence
| interval
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)
num <- (15.34^2/8 + 18.23^2/21)^2
den <- ((15.34^4/8^2)/7+(18.23^4/21^2)/20)
mydf <- num / den
qt(.975, mydf)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
swirl()
1
2
0.8
15
qt(.95,15)
dim(fs)
t.test(fs$sheight - fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
7.8
mybin(7.8)
info
skip()
library(swirl)
swirl()
pt(2.5, 15, lower.tail = FALSE)
qnorm(.95, 2, lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(q = 2, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
pnorm(q = 2, mean = 0, sd = 1, lower.tail = FALSE, log.p = FALSE)
mybin
pbinom(6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(7,8, prob = 0.5, lower.tail = TRUE, log.p = FALSE)
ppois(9,100*.05, lower.tail = FALSE)
ppois(9, 5, lower.tail = FALSE)
qt(.95, 8)
qt(.975, 8)
1100+c(-1,1)*2.306*(30/(9^.5))
t.test(-2, 9)
pt(.95, 9)
.6^.5
.68^.5
qt(.975, 18)
(9*.6+9*.68)/18
0.64^.5
(1/10 +1/10)^.5
.8*(1/10 +1/10)^.5
2.100922*.8*(1/10 +1/10)^.5
-2+2.100922*.8*(1/10 +1/10)^.5
-2-2.100922*.8*(1/10 +1/10)^.5
(99*.25+99*4)/198
(1/100 + 1/100)^.5
2.125*(1/100 + 1/100)^.5
2.125*0.3005204+2
1.96*0.3005204+2
2-1.96*0.3005204
pt(2.5, 4)
pt(97.5, 4)
pt(2.5, 4, lower.tail = FALSE)
qnorm(.95)
sub_id <- c(1,2,3,4,5)
baseline <- c(140,138,150,148,135)
week2 <- c(132, 135, 151, 146, 130)
BP <- cbind(sub_id, baseline, week2)
BP
t.test(BP$week2-BP$baseline)
BP <- as.data.frame(BP)
t.test(BP$week2-BP$baseline)
mean(BP$baseline)
mean(BP$week2)
BP
(1-.75)^2
(0-.75)^2
(.0625*3+.5625)/4
((.0625*3+.5625)/4)^.5
.5/.4330127
pnorm(0.75, mean = 0.5, sd = 0.4330127/sqrt(4)
)
pt(.95, 3, lower.tail = FALSE)
?pt
pt(.95, 3, lower.tail = TRUE)
pt(1.154701, 3)
x <- c(1,1,1,0)
t.test(x)
?power.t.test
100^.5 * (.01 - 0)/.04
power.t.test(n = 100, delta = .01, sd = .04, sig.leve = 0.05, power = 2.5, type = "one.sample", alternative = "one.sided")
power.t.test(n = 100, delta = .01, sd = .04, sig.leve = 0.05, power = NULL, type = "one.sample", alternative = "one.sided")
power.t.test(n = 100, delta = .01, sd = .04, sig.leve = 0.1, power = NULL, type = "one.sample", alternative = "one.sided")
power.t.test(n = 100, delta = .01, sd = .04, sig.leve = 0.1, power = NULL, type = "one.sample", alternative = "two.sided")
power.t.test(n = NULL, delta = .01, sd = .04, sig.level = 0.1, power = .90, type = "one.sample", alternative = "two.sided")
power.t.test(n = 100, delta = .01, sd = .04, sig.level = 0.05, power = NULL, type = "one.sample", alternative = "one.sided")
power.t.test(n = NULL, delta = .01, sd = .04, sig.level = 0.1, power = .90, type = "one.sample", alternative = "one.sided")
power.t.test(n = NULL, delta = .01, sd = .04, sig.level = 0.5, power = .90, type = "one.sample", alternative = "one.sided")
power.t.test(n = NULL, delta = .01, sd = .04, sig.level = 0.05, power = .90, type = "one.sample", alternative = "one.sided")
power.t.test(n = NULL, delta = .01, sd = .04, sig.level = 0.05, power = .90, type = "one.sample", alternative = "two.sided")
qt(.95, 3)
?pnorm
pnorm(2.353363, mean = 0.75, sd = 0.4330127, lower.tail = FALSE)
pnorm(2.353363, mean = 0.5, sd = 0.4330127, lower.tail = FALSE)
dt(1.154701, 3)
pt(1.154701, 3)
dt(1.154701, 3)*2
?pbinom
?binom.test
binom.test(x = 3, n = 4, p = 0.5, alternative = “greater”, conf.level = 0.95)
binom.test(3, 4, 0.5, alternative="greater", conf.level = 0.95)
poisson.test(10, 1787, 1/100, alternative = “greater”, conf.level = 0.95)
poisson.test(10, 1787, 1/100, alternative =“greater”, conf.level = 0.95)
poisson.test(10, 1787, 1/100, alternative = "greater", conf.level = 0.95)
poisson.test(10, 1787, 1/100, alternative = "less", conf.level = 0.95)
expodistr <- rexp(10000, .2)
summary(expodistr)
str(expodistr)
popdistr <- data.frame(rating = c(rexp(10000, 0.2)))
rm expodistr
rm "expodistr"
rm(expodistr)
View(popdistr)
setwd("/Users/harridw/Development/Coursera/Course6")
set.seed(123)
popdat <- data.frame(rating = c(rexp(10000, 0.2)))
popdat$rindx <- as.factor(seq(along = popdat$rating))  ## add row index
popdat <- select(popdat, rindx, rating)
summary(popdat)
sd(popdat)
sd(popdat$rating)
set.seed(123)
popdat <- data.frame(rating = c(rexp(10000, 0.2)))
mean(popdat)
var(popdat)
mean(popdat$rating)
var(popdat$rating)
round(mean(popdat$rating), 3)
round(var(popdat$rating), 3)
setwd("/Users/harridw/Development/Coursera/Course6/StatsInferenceSimulation")
set.seed(123)
popdat <- data.frame(rating = c(rexp(10000, 0.2)))
popmean <- round(mean(popdat$rating), 3)   ## Population Mean
popvar <- round(var(popdat$rating), 3)     ## Population Variance
popsd <- round(sd(popdat$rating), 3)
hist(popdat, breaks = 30, color = "red", xlab = "",
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, breaks = 30, color = "red", xlab = "",
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
density(popdat$rating, breaks = 30, color = "red", xlab = "",
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, probability = TRUE, breaks = 30, color = "red", xlab = "",
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, prob = TRUE, breaks = 30, color = "red", xlab = "", ylim = c(0, .25)
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, probability = TRUE, breaks = 30, color = "red", xlab = "",
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, prob = TRUE, breaks = 30, col = "red", xlab = "", ylim = c(0, .25),
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, prob = TRUE, breaks = 40, col = "red", xlab = "", ylim = c(0, .2),
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, prob = TRUE, breaks = 40, col = "red", xlab = "",
ylim = c(0, .2), xlim = seq(from = 0, to = 40, by 5),
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, prob = TRUE, breaks = 40, col = "red", xlab = "",
ylim = c(0, .2), xlim = c(seq(from = 0, to = 40, by 5)),
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, prob = TRUE, breaks = 40, col = "red", xlab = "",
ylim = c(0, .2), xlim = c(seq(from = 0, to = 40, by = 5)),
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
xrange <- c(seq(from = 0, to 40, by = 5))
xrange <- c(seq(from = 0, to = 40, by = 5))
hist(popdat$rating, prob = TRUE, breaks = 40, col = "red", xlab = "",
ylim = c(0, .2), xlim = c(xrange),
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
hist(popdat$rating, prob = TRUE, breaks = 40, col = "red", xlab = "", ylim = c(0, .2),
main = "Distribution of Random Exponentials (10k)", cex.main = 0.5)
abline(v = 5, col = "black", lwd = 2)
set.seed(123)
lrg.sample <- data.frame(rating = c(rexp(10000, 0.2)))
sample.mean <- round(mean(lrg.sample$rating), 3)   ## Population Mean
sample.var <- round(var(lrg.sample$rating), 3)     ## Population Variance
sample.sd <- round(sd(lrg.sample$rating), 3)
hist(lrg.sample$rating)
set.seed(101)
mlambda <- 0.2
msims <- 1000
n <- 40
mns = NULL
for (i in 1: msims) mns <- c(mns, mean(rexp(n,mlambda)))
sim.mean <- cumsum(mns) / (1:msims)
plot(sim.mean, type = "l", lwd = 1, col = "black"
xlab = "Number of Simulations",
ylab = "Cumulative Mean",
main = "Sample Mean vs. Theoretical Mean")
abline(h = 1/lambda, lwd = 2, col = "red")
sim.mean <- cumsum(mns) / (1:msims)
plot(sim.mean, type = "l", lwd = 1, col = "black"
xlab = "Number of Simulations",
ylab = "Cumulative Mean",
main = "Sample Mean vs. Theoretical Mean")
abline(h = 1/mlambda, lwd = 2, col = "red")
sim.mean <- cumsum(mns) / (1:msims)
plot(sim.mean, type = "l", lwd = 1, col = "black",
xlab = "Number of Simulations",
ylab = "Cumulative Mean",
main = "Sample Mean vs. Theoretical Mean")
abline(h = 1/mlambda, lwd = 2, col = "red")
sim.mean <- cumsum(mns) / (1:msims)
plot(sim.mean, type = "l", lwd = 1, col = "black", ylim = c(4,6),
xlab = "Number of Simulations",
ylab = "Cumulative Mean",
main = "Sample Mean vs. Theoretical Mean")
abline(h = 1/mlambda, lwd = 2, col = "red")
set.seed(100)
mlambda <- 0.2
msims <- 1000
n <- 40
mns = NULL
for (i in 1: msims) mns <- c(mns, mean(rexp(n,mlambda)))
sim.mean <- cumsum(mns) / (1:msims)
plot(sim.mean, type = "l", lwd = 1, col = "black", ylim = c(4,5.5),
xlab = "Number of Simulations",
ylab = "Cumulative Mean",
main = "Sample Mean vs. Theoretical Mean")
abline(h = 1/mlambda, lwd = 2, col = "red")
set.seed(100)
vlambda <- 0.2
vsims <- 1000
n <- 40
mns = NULL
for (i in 1: vsims) mns <- c(mns, var(rexp(n,vlambda)))
sim.var <- cumsum(mns) / (1:vsims)
plot(sim.var, type = "l", lwd = 1, col = "black", ylim = c(4,5.5),
xlab = "Number of Simulations",
ylab = "Cumulative Variance",
main = "Sample Variance vs. Theoretical Variance", cex.main = 0.5)
abline(h = (1/vlambda)^2, lwd = 2, col = "red")
sim.var <- cumsum(mns) / (1:vsims)
plot(sim.var, type = "l", lwd = 1, col = "black", ylim = c(4,5.5),
xlab = "Number of Simulations",
ylab = "Cumulative Variance",
main = "Sample Variance vs. Theoretical Variance", cex.main = 0.5)
abline(h = (1/vlambda)^2/n, lwd = 2, col = "red")
sim.var <- cumsum(mns) / (1:vsims)
plot(sim.var, type = "l", lwd = 1, col = "black", ylim = c(0,1),
xlab = "Number of Simulations",
ylab = "Cumulative Variance",
main = "Sample Variance vs. Theoretical Variance", cex.main = 0.5)
abline(h = (1/vlambda)^2/n, lwd = 2, col = "red")
